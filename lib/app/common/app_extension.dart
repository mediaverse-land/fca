/// Generated by Flutter GetX Starter on 2022-09-05 15:53
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';

extension FontWeightExtension on FontWeight {
  FontWeight get auto {
    if (Platform.isAndroid && this == FontWeight.bold) {
      return FontWeight.w500;
    }
    return this;
  }
}
extension HexColor on String {
  /// String is in the format "aabbcc" or "ffaabbcc" with an optional leading "#".
  Color toColor() {
    if (length >3) {
      final buffer = StringBuffer();
      if (length == 6 || length == 7) buffer.write('ff');
      buffer.write(replaceFirst('#', ''));
      return Color(int.parse(buffer.toString(), radix: 16));
    }
    return Colors.white;
  }

/// Prefixes a hash sign if [leadingHashSign] is set to `true` (default is `true`).

}

extension DarkMode on BuildContext {
  /// is dark mode currently enabled?
  bool get isDarkMode {
    final brightness = MediaQuery.of(this).platformBrightness;
    return brightness == Brightness.dark;
  }
}

extension Loc on GetInterface {
  /// is dark mode currently enabled?
  bool get isLocEnglish {

    return Get.locale!.languageCode.toString().contains("en");
  }
}
extension EmailValidator on String {
  bool get isEmail {
    final RegExp emailRegExp = RegExp(
      r'^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\.[a-zA-Z]+',
      caseSensitive: false,
      multiLine: false,
    );
    return emailRegExp.hasMatch(this);
  }
}





extension DateTimeFormatting on DateTime {
  String toFormattedDateString() {
    return DateFormat('yyyy/MM/dd  HH:MM').format(this);
  }
}

