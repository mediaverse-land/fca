name: Build APK/AAB Gibical

on:
  repository_dispatch:
    types: [build_apk, build_aab]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: 3.22.0


      # Clean Flutter cache
      - name: Clean Flutter cache
        run: flutter pub cache clean

      # Clean build files
      - name: Clean project
        run: flutter clean

      # Get dependencies
      - name: Get dependencies
        run: flutter pub get

      # Build based on event type (APK or AAB)
      - name: Build APK or AAB
        run: |
          if [ "${{ github.event.action }}" == "build_apk" ]; then
            flutter build apk --release --split-per-abi
          elif [ "${{ github.event.action }}" == "build_aab" ]; then
            flutter build appbundle --release
          fi

      # Decode keystore
      - name: Decode keystore
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE_FILE_BASE64 }}
        run: |
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > android/app/keystore.jks

      # Sign APK or AAB
      - name: Sign APK or AAB
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ "${{ github.event.action }}" == "build_apk" ]; then
            for APK in build/app/outputs/apk/release/*.apk; do
              jarsigner -verbose -keystore android/app/keystore.jks -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" "$APK" "$KEY_ALIAS"
            done
          elif [ "${{ github.event.action }}" == "build_aab" ]; then
            jarsigner -verbose -keystore android/app/keystore.jks -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" build/app/outputs/bundle/release/app-release.aab "$KEY_ALIAS"
          fi

      # Align APK
      - name: Zipalign APK (if APK is built)
        if: github.event.action == 'build_apk'
        run: |
          for APK in build/app/outputs/apk/release/*.apk; do
            zipalign -v 4 "$APK" "$APK-aligned.apk"
            mv "$APK-aligned.apk" "$APK"
          done

      # Send APK or AAB to Telegram
      - name: Send APK or AAB to Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ "${{ github.event.action }}" == "build_apk" ]; then
            for APK in build/app/outputs/apk/release/*.apk; do
              curl -F chat_id=$TELEGRAM_CHAT_ID -F document=@"$APK" -F caption="Gibical APK" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
            done
          elif [ "${{ github.event.action }}" == "build_aab" ]; then
            curl -F chat_id=$TELEGRAM_CHAT_ID -F document=@"build/app/outputs/bundle/release/app-release.aab" -F caption="Gibical AAB" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument
          fi
